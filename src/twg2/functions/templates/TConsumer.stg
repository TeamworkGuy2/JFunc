import "$commonTemplates.JavaClass$"

TConsumer(var) ::= <<
package $var.classInfo.packageName$;

import java.util.Objects;
import java.util.function.Consumer;

/** $var.type1.type$ {@link Consumer\} interface
 * @author TeamworkGuy2
 * @since 2015-1-25
 */
@javax.annotation.Generated("StringTemplate")
@FunctionalInterface
public interface $ClassTypeDefinition(var.classInfo)$ {

	/** Performs an operation on the given argument.
	 * @param value the $var.type1.type$ argument
	 */
$if(var.override)$	@Override
$endif$	public void accept($var.type1.type$ value);


	default $ClassType(var.classInfo)$ andThen($ClassType(var.classInfo)$ after) {
		Objects.requireNonNull(after);
		return ($var.type1.type$ t) -> {
			accept(t);
			after.accept(t);
		\};
	\}

\}

>>